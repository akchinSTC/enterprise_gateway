sudo: required
language: python

python:
    - 3.6

services:
    - docker

cache:
    directories:
     - /home/travis/.sbt/

env:
  global:
    - ASYNC_TEST_TIMEOUT=30
    - MINICONDA_VERSION=4.5.11
    - MINIKUBE_VERSION=0.23.1
    - CONDA_DIR=/opt/conda
    - PATH=$CONDA_DIR/bin:$PATH

before_install:
    - mkdir -p $HOME/.sbt/launchers/1.2.1
    - curl -L -o $HOME/.sbt/launchers/1.2.1/sbt-launch.jar http://central.maven.org/maven2/org/scala-sbt/sbt-launch/1.2.1/sbt-launch-1.2.1.jar
    - wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
    - curl -s -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.9.4/bin/linux/amd64/kubectl
    - curl -s -Lo minikube https://storage.googleapis.com/minikube/releases/v${MINIKUBE_VERSION}/minikube-linux-amd64

install:
    - /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR
    - conda install -y websocket-client nose
    - make dist
    - pip install dist/*.whl
    - echo "Starting local kubernetes cluster (minikube)"
    - chmod +x kubectl && sudo mv kubectl /usr/local/bin/
    - chmod +x minikube && sudo mv minikube /usr/local/bin/

script:
    - sudo minikube start --vm-driver=none
#   - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
    - sleep 30
    - hostname
    - ifconfig
    - env
    - export IP_ADDR=$(echo "$SSH_CONNECTION" | cut -d' ' -f3)
    - sed -i 's/#  externalIPs:/  externalIPs:/g' etc/kubernetes/enterprise-gateway.yaml
    - sed -i "s/#  - k8s-master-public-ip/  - $IP_ADDR/g" etc/kubernetes/enterprise-gateway.yaml
    - cat etc/kubernetes/enterprise-gateway.yaml
    - sudo kubectl create -f etc/kubernetes/enterprise-gateway.yaml
    - sleep 60
    - sudo kubectl get all --all-namespaces
    - sudo kubectl logs $(sudo kubectl get pods -n enterprise-gateway | grep enterprise-gateway | cut -d' ' -f1) -n enterprise-gateway
#    - telnet $IP_ADDR 8888
    - netstat -nlp
    - cat /etc/hosts
    - make itest-kubernetes

after_success:
  - echo "Travis exited with ${TRAVIS_TEST_RESULT}"
  - python --version
  - pip --version
  - pip list
  - pip install codecov
  - codecov

after_failure:
  - echo "Travis exited with ${TRAVIS_TEST_RESULT}"
  - python --version
  - pip --version
  - pip list
  - docker logs itest-yarn
